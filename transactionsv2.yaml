asyncapi: 2.4.0
# ----
id: "http://demo.com"
# ----
info:
  title: Transactions Microservice events
  version: 1.0.1
  description: |
    # Microservice transactions
  termsOfService: https://demo.pe/tos.html
  contact:
    name: Manuel Zegarra
    email: mzegarra@gmail.com
    url: https://www.csonic.cloud
# ---
tags:
  - name: Microservice transactions
    description: Event's specification for microservice transactions
# ---
servers:
  dev:
    url: dev.mykafkacluster.org:8092
    protocol: kafka-secure
    description: Dev broker
    protocolVersion: '1.0.0'
    security:
      - saslScramCreds: []        
  qa:
    url: qa.mykafkacluster.org:8092
    protocol: kafka-secure
    description: QA broker
    protocolVersion: '1.0.0'
    security:
      - saslScramCreds: []    
  prod:
    url: qa.mykafkacluster.org:8092
    protocol: kafka-secure
    description: Production broker
    protocolVersion: '1.0.0'
    security:
      - saslScramCreds: []
# ---
channels:
  t.transactions:
    publish:
      summary: |
        summary
      description: |
        The topic on which customer events may be produced and consumed    
      message:
        $ref: '#/components/messages/transactionRequested'
  t.transactions.response:
    subscribe:
      message:
        oneOf:
          - $ref: '#/components/messages/transactionExecuted'
          - $ref: '#/components/messages/transactionSuspected'
          - $ref: '#/components/messages/transactionFailed'    
#--
components:
  messages:
    transactionRequested:
      name: transactionRequested
      title: "Transaction title"
      summary: "Transaction summary"
      contentType: avro/binary
      schemaFormat: application/vnd.apache.avro;version=1.9.0
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
          $ref: 'https://raw.githubusercontent.com/mzegarras/asyncapi-labs/main/schemas/TransactionRequested.avsc'
    transactionExecuted:
      name: transactionExecuted
      title: "Transaction title"
      summary: "Transaction summary"
      contentType: avro/binary
      schemaFormat: application/vnd.apache.avro;version=1.9.0
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
          $ref: 'https://raw.githubusercontent.com/mzegarras/asyncapi-labs/main/schemas/TransactionExecuted.avsc'
    transactionSuspected:
      name: Transaction Suspected
      title: "Transaction suspected title"
      summary: "Transaction suspected summary"
      contentType: avro/binary
      schemaFormat: application/vnd.apache.avro;version=1.9.0
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
          $ref: 'https://raw.githubusercontent.com/mzegarras/asyncapi-labs/main/schemas/TransactionSuspected.avsc'
    transactionFailed:
      name: Transaction failed
      title: "Transaction failed title"
      summary: "Transaction failed summary"
      contentType: avro/binary
      schemaFormat: application/vnd.apache.avro;version=1.9.0
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
          $ref: 'https://raw.githubusercontent.com/mzegarras/asyncapi-labs/main/schemas/TransactionFailed.avsc'          
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          applicationId:
            type: string         
          transactionId:
            type: integer
            minimum: 0
            maximum: 100
  securitySchemes:
      saslScramCreds:
        type: userPassword
        description: User & key from confluent
        x-mykafka-sasl-mechanism: 'SCRAM-SHA-256' 